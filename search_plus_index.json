{"./":{"url":"./","title":"Termux第三方中文wiki","keywords":"","body":"Termux第三方中文维基 介绍 此维基建立的初衷是为Termux使用者提供帮助(也可以帮助一些萌新)。 在看这个维基/使用Termux之前，请先学好Linux基础！而不是看到某些文章/视频就跃跃欲试！在看这个维基/使用Termux之前，请先学好Linux基础！而不是看到某些文章/视频就跃跃欲试！在看这个维基/使用Termux之前，请先学好Linux基础！而不是看到某些文章/视频就跃跃欲试！ 说明 此维基不包含任何关于黑阔的内容，因为官方已经禁止：https://wiki.termux.com/wiki/hacking Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-07 17:04:50 "},"安装/安卓7.html":{"url":"安装/安卓7.html","title":"安装","keywords":"","body":"安装 Bootstrap https://github.com/termux/termux-packages/releases/ 下载 https://github.com/termux/termux-app/releases 文件名 描述 sha256sums 哈希值 termux-appv+-debug.apk 单元格 termux-app_v0.118.0+github-debug_universal.apk 全部架构 想在安卓5~6运行Termux？看这里:https://termuxchn.github.io/wiki/安装/安卓5.html universal是一个通用 APK，它将适用于所有受支持的架构。APK 和引导程序安装大小将为~180MB. F-Droid不支持特定于架构的 APK。 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"安装/安卓5.html":{"url":"安装/安卓5.html","title":"安卓5~6","keywords":"","body":"安卓5~6 Bootstrap https://github.com/termux/termux-packages/releases/tag/bootstrap-2022.04.28-r6%2Bapt-android-5 下载 https://github.com/termux/termux-app/actions/runs/2237286563 文件名 描述 sha256sums 哈希值 termux-appv-apt-android-5-github-debug 单元格 termux-app_v-apt-android-5-github-debug_universal 全部架构 universal是一个通用 APK，它将适用于所有受支持的架构。APK 和引导程序安装大小将为~180MB. F-Droid不支持特定于架构的 APK。 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"源/源.html":{"url":"源/源.html","title":"换源","keywords":"","body":"换源 即使指定架构，也是不行滴 如果你是个萌新 运行: termux-change-repo 选一个你喜欢的 使用上，下，左，右键与窗口交互，空格选择，回车确定 什么，你说慢？你不会选个中国的啊 什么？还慢？你在中国还嫌慢?那就用官方源 啥？你在中国？你就把代理关了啊如果有问题，那就得手动换源了 请做好备份，什么？怎么备份？建议STFW 备份源文件: cp $PREFIX/etc/apt/sources.list $PREFIX/etc/apt/sources.list.bak 强烈推荐USTC 注意，不要使用任何外部app修改文件，首先你能不能修改是一回事，其次，就算你有root，也不要作死用外部app修改 清华镜像 命令行嗯，直接偷 sed -i 's@^\\(deb.*stable main\\)$@#\\1\\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/apt/termux-main stable main@' $PREFIX/etc/apt/sources.list apt update && apt upgrade 手动 替换$PREFIX/etc/apt/sources.list为如下内容# The termux repository mirror from TUNA: deb https://mirrors.tuna.tsinghua.edu.cn/termux/apt/termux-main stable main 停一下，你看懂了吗？没看懂？好吧没救了，看懂了？好，我们继续 其实所有的换源方法都差不多，无非是要修改$PREFIX/etc/apt/sources.list DreamOneX的自动脚本 export SOURCE=这里填你要换的源地址，别瞎xx复制粘贴，不要加 stable main sed -i 's@^\\(deb.*stable main\\)$@#\\1\\ndeb '$SOURCE' stable main@' $PREFIX/etc/apt/sources.list unset SOURCE apt update && apt upgrade 手动 替换$PREFIX/etc/apt/sources.listdeb 反复强调，你的源的地址，不要加stablemain，因为右边就是，看就在这-> stable main 停一停，你看懂了吗？ 这只更改了主源，其他的，如x11源、root源、包括自定义源，没有被更改，这些源的地址在目录$PREFIX/etc/apt/sources.list.d/中 参考其他源的镜像的Help以及termux-packages wiki更改其地址源 termux-packages issues termux-packages wiki termux-packages discussions可能出现的错误 提示`CANNOT LINK EXECUTABLE \"curl\": library \"libssl.so.3\" not found 可以试试的办法: 尝试使用termux-change-repo 运行这个sed -i 's|https|http|g' $PREFIX/etc/apt/sources.list apt update && apt upgrade 将$PREFIX/etc/apt/sources.list中的源地址更改为http地址 e.g. deb https://mirrors.tuna.tsinghua.edu.cn/termux/apt/termux-main stable main改为deb http://mirrors.tuna.tsinghua.edu.cn/termux/apt/termux-main stable main 如果想使用https源(为什么要用https源呢，加解密还要花时间花性能而且没什么好加密的) 首先，换为http源 然后，pkg i openssl 最后，换回https源 当然，你也可以随便找一个源(比如)，下载对应架构的openssl软件包(如果你不知道你的架构，可以使用uname -m查看)，注意不是openssl-1.1，注意是termux源，运行:termux-setup-storage # 可能会询问存储空间/SD卡/内部存储权限，同意，~~啥这提到的权限都没有？无论他问你要什么权限，同意就行~~ cp storage/downloads/openssl*.deb . dpkg -i ./openssl*.deb apt update && apt upgrade 注: uname对应架构 arm64, aarch64均下载aarch64软件包 armv8l, armv7, arm, aarch32 (我没见过) 均下载arm软件包 amd64, x86_64, x64均下载x86_64软件包 i686下载i686软件包 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"源/主源.html":{"url":"源/主源.html","title":"主源","keywords":"","body":"主源 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"源/游戏.html":{"url":"源/游戏.html","title":"游戏源","keywords":"","body":"游戏源 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"源/x11源.html":{"url":"源/x11源.html","title":"x11源","keywords":"","body":"x11源 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"源/不稳定.html":{"url":"源/不稳定.html","title":"不稳定源","keywords":"","body":"不稳定源 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"源/root.html":{"url":"源/root.html","title":"root源","keywords":"","body":"root源 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"源/安卓5源.html":{"url":"源/安卓5源.html","title":"安卓5~6源","keywords":"","body":"安卓5~6源 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"源/第三方.html":{"url":"源/第三方.html","title":"第三方源","keywords":"","body":"第三方源 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"pacman.html":{"url":"pacman.html","title":"pacman","keywords":"","body":"pacman Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-05 22:20:59 "},"包.html":{"url":"包.html","title":"软件包","keywords":"","body":"软件包 安装软件包 这个众所周知： pkg install 可以精简成： pkg i 卸载软件包 pkg uninstall 精简： pkg un 为什么可以精简？ 看看pkg的源代码就知道了： if [ $# = 0 ]; then show_help fi CMD=\"$1\" shift 1 case \"$CMD\" in f*) dpkg -L \"$@\";; h*) show_help;; sh*|inf*) apt show \"$@\";; add|i*) select_mirror update_apt_cache apt install \"$@\" ;; autoc*) apt autoclean;; cl*) apt clean;; list-a*) apt list \"$@\";; list-i*) apt list --installed \"$@\";; rei*) apt install --reinstall \"$@\";; se*) select_mirror update_apt_cache apt search \"$@\" ;; un*|rem*|rm|del*) apt remove \"$@\";; up*) select_mirror apt update apt full-upgrade \"$@\" ;; *) echo \"Unknown command: '$CMD' (run 'pkg help' for usage information)\"; exit 1;; esac 官方也想偷懒 更新软件包 这个众所周知： pkg update -y 精简： pkg up -y 升级软件包 pkg upgrade -y 精简： pkg upgr -y 查找软件包 pkg search 精简： pkg se 列出所有软件包 pkg list-all 精简： pkg list-a 列出已安装软件包 pkg list-installed 精简： pkg list-i 重新安装软件包 pkg reinstall -y 精简： pkg rei -y 查看软件包信息 pkg info跟pkg show效果一样 pkg show 精简： pkg sh 查找软件包中的文件 pkg files 精简： pkg f 清理所有软件包 pkg clean 精简： pkg cl ![] 清理所有过时软件包 pkg autoclean 精简： pkg autoc 自动卸载不需要的包 apt autoremove -y pkg执行时间比较长，因为它会检测你的地区来选择合适的源： select_mirror() { local main_repo=\"https://packages-cf.termux.org/apt/termux-main\" declare -A mirrors mirrors[16]=\"$main_repo\" mirrors[14]=\"https://dl.kcubeterm.com/termux-main\" mirrors[13]=\"https://grimler.se/termux-packages-24\" mirrors[12]=\"https://termux.mentality.rip/termux-main\" mirrors[11]=\"https://termux.astra.in.ua/apt/termux-main\" mirrors[10]=\"https://termux.librehat.com/apt/termux-main\" mirrors[9]=\"https://mirror.mwt.me/termux/main\" mirrors[8]=\"https://termux.sahilister.in/apt/termux-main\" mirrors[7]=\"https://plug-mirror.rcac.purdue.edu/termux/termux-main\" local current_mirror current_mirror=$(grep -m 1 -P \"^\\s*deb\\s+\" @TERMUX_PREFIX@/etc/apt/sources.list | grep -oP 'https?://[^\\s]+') # Do not update mirror if: # * If $TERMUX_PKG_NO_MIRROR_SELECT was set. # * Uses .cn domain - specific to Chinese users. # * Uses mirror.bardia.tech, mirror based in Iran. if [ -n \"${TERMUX_PKG_NO_MIRROR_SELECT-}\" ] || \\ [[ \"$(hostname \"$current_mirror\")\" == *\".cn\" ]] || \\ [[ \"$(hostname \"$current_mirror\")\" == *\"mirror.bardia.tech\"* ]]; then return fi # Mirrors are rotated if 6 hours timeout has been passed or mirror is no longer accessible. local pkgcache=\"@TERMUX_CACHE_DIR@/apt/pkgcache.bin\" if [ -e \"$pkgcache\" ] && (( $(last_modified \"$pkgcache\") 0)); then local w random_weight calc_weight=0 random_weight=$((RANDOM % total_mirror_weight + 1)) for w in $(echo \"${!mirrors[@]}\" | tr ' ' '\\n' | sort -n); do calc_weight=$((calc_weight + w)) if ((calc_weight >= random_weight)); then echo \"Picking mirror: ${mirrors[$w]}\" selected_mirror=\"${mirrors[$w]}\" break fi done fi if [ -n \"$selected_mirror\" ]; then echo \"deb $selected_mirror/ stable main\" > @TERMUX_PREFIX@/etc/apt/sources.list else echo \"Using fallback mirror: $main_repo\" echo \"deb $main_repo/ stable main\" > @TERMUX_PREFIX@/etc/apt/sources.list fi } Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"设置.html":{"url":"设置.html","title":"设置","keywords":"","body":"设置 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"failsafe.html":{"url":"failsafe.html","title":"failsafe","keywords":"","body":"failsafe Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-05 22:20:59 "},"api.html":{"url":"api.html","title":"API","keywords":"","body":"API Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-05 22:20:59 "},"问题.html":{"url":"问题.html","title":"常见问题","keywords":"","body":"常见问题 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"反馈.html":{"url":"反馈.html","title":"官方反馈教程","keywords":"","body":"官方反馈教程 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"捐赠.html":{"url":"捐赠.html","title":"捐赠","keywords":"","body":"捐赠 Termux官方开发人员 主要开发者 贡献者 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "},"注意事项.html":{"url":"注意事项.html","title":"注意事项","keywords":"","body":"注意事项 虚拟机 不要在任何手机上虚拟机中尝试使用termux！不要在任何手机上虚拟机中尝试使用termux！不要在任何手机上虚拟机中尝试使用termux！ https://github.com/termux/termux-packages/issues/6726 Copyright © TermuxCHN 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-05-10 22:49:14 "}}